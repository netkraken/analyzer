#!/usr/bin/env python
from __future__ import print_function

import json
import sys
import hashlib


def anonymize_str(texts):
    result = []
    for text in texts.split():
        prefix = text[:6]
        prefix_md5 = hashlib.md5(prefix).hexdigest()[:4]
        md5 = hashlib.md5(text).hexdigest()[:10]
        if text.startswith("dev"):
            result.append("-".join(["devel", prefix_md5, md5]))
            continue
        if text.startswith("tuv"):
            result.append("-".join(["testing", prefix_md5, md5]))
            continue
        result.append("-".join([prefix_md5, md5]))
    return " ".join(result)


def anonymize(obj):
    for key in ["source", "target", "name", "id"]:
        if key in obj:
            obj[key] = anonymize_str(obj[key])
    return obj


if __name__ == "__main__":
    data = json.load(sys.stdin)

    if len(sys.argv) > 1:
        if sys.argv[1] == "list-mapping":
            for key in sorted(data["nodes"]):
                print("%-20s  %s" % (key, anonymize_str(key)))
            sys.exit()
        print("unknown command %s" % sys.argv[1])
        sys.exit(1)

    for link in data["links"]:
        anonymize(link)

    new_nodes = {}
    for key, value in data["nodes"].items():
        new_key = anonymize_str(key)
        new_nodes[new_key] = anonymize(value)
    data["nodes"] = new_nodes

    print(json.dumps(data, indent=4))
